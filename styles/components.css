.btn {
    color: var(--main-text-color);
    background-color: var(--main-brand-color);
    padding: 0.8rem;
    display: inline-block;
    /* border: 2px solid white; */
    border-radius: 5px;
    border: none;
    box-shadow: none;
    cursor: pointer;
    border: 1px solid var(--main-brand-color);
    /* transition-property: background-color;
    transition-duration: 10s;  Esto funciona, pero no es la forma habitual de escribirlo*/
    transition: background-color 2s ease-in-out;
}

@media (hover: hover) {
    .btn:hover {
        color: #000;
        background-color: yellow;
    }
}

.btn.btn--secondary {
    background-color: transparent;
    border: 1px solid var(--main-text-color);
}

.hidden {
    /* display: none; Deja de ocupar el espacio*/
    /* visibility: hidden; Sigue ocupando el espacio */
    display: none;
}

.form__element {
    display: flex;
    flex-direction: column;
    margin-bottom: 12px;
}

.form__element__radio__list {
    display: flex;
    align-items: center;
    gap: 10px;
}

.form__element.form__element--checkbox {
    flex-direction: row;
    align-items: center;
    /* gap: 10px; Esta sería la solución buena para separar elementos en un display flex*/

}

.form__element.form__element--checkbox .form__label {
    margin: 0;
}

.form__element.form__element--checkbox input[type="checkbox"] {
    margin-left: 10px;
    /* Otra forma de crear el gap usando ese tipo de selector entre []*/
}

.form__label {
    margin-bottom: 10px;
    font-size: 1.2rem;
}

.form__input {
    border-radius: 5px;
    padding: 16px 12px;
    border: none;
    background-color: #333;
    color: var(--main-text-color);
}